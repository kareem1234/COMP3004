#############################################################################
# Makefile for building: test-database
# Generated by qmake (2.01a) (Qt 4.8.1) on: Sat Nov 2 16:59:40 2013
# Project:  test-database.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -spec /usr/share/qt4/mkspecs/linux-g++ CONFIG+=debug CONFIG+=declarative_debug -o Makefile test-database.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_WEBKIT -DQT_SQL_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtSql -I/usr/include/qt4 -I.
LINK          = g++
LFLAGS        = 
LIBS          = $(SUBLIBS)  -L/usr/lib/i386-linux-gnu -lQtSql -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		databasetest.cpp \
		databasemanager.cpp \
		databasecontroller.cpp \
		user.cpp \
		task.cpp \
		ta.cpp \
		instructor.cpp \
		evaluation.cpp \
		course.cpp moc_databasetest.cpp \
		moc_databasemanager.cpp \
		moc_databasecontroller.cpp
OBJECTS       = main.o \
		databasetest.o \
		databasemanager.o \
		databasecontroller.o \
		user.o \
		task.o \
		ta.o \
		instructor.o \
		evaluation.o \
		course.o \
		moc_databasetest.o \
		moc_databasemanager.o \
		moc_databasecontroller.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/declarative_debug.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		test-database.pro
QMAKE_TARGET  = test-database
DESTDIR       = 
TARGET        = test-database

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)
	{ test -n "$(DESTDIR)" && DESTDIR="$(DESTDIR)" || DESTDIR=.; } && test $$(gdb --version | sed -e 's,[^0-9]\+\([0-9]\)\.\([0-9]\).*,\1\2,;q') -gt 72 && gdb --nx --batch --quiet -ex 'set confirm off' -ex "save gdb-index $$DESTDIR" -ex quit '$(TARGET)' && test -f $(TARGET).gdb-index && objcopy --add-section '.gdb_index=$(TARGET).gdb-index' --set-section-flags '.gdb_index=readonly' '$(TARGET)' '$(TARGET)' && rm -f $(TARGET).gdb-index || true

Makefile: test-database.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/declarative_debug.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/i386-linux-gnu/libQtSql.prl \
		/usr/lib/i386-linux-gnu/libQtCore.prl
	$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ CONFIG+=debug CONFIG+=declarative_debug -o Makefile test-database.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_phonon.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit_version.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/declarative_debug.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/i386-linux-gnu/libQtSql.prl:
/usr/lib/i386-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -spec /usr/share/qt4/mkspecs/linux-g++ CONFIG+=debug CONFIG+=declarative_debug -o Makefile test-database.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/test-database1.0.0 || $(MKDIR) .tmp/test-database1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/test-database1.0.0/ && $(COPY_FILE) --parents databasetest.h databasemanager.h databasecontroller.h user.h task.h ta.h instructor.h evaluation.h course.h .tmp/test-database1.0.0/ && $(COPY_FILE) --parents main.cpp databasetest.cpp databasemanager.cpp databasecontroller.cpp user.cpp task.cpp ta.cpp instructor.cpp evaluation.cpp course.cpp .tmp/test-database1.0.0/ && (cd `dirname .tmp/test-database1.0.0` && $(TAR) test-database1.0.0.tar test-database1.0.0 && $(COMPRESS) test-database1.0.0.tar) && $(MOVE) `dirname .tmp/test-database1.0.0`/test-database1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/test-database1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_databasetest.cpp moc_databasemanager.cpp moc_databasecontroller.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_databasetest.cpp moc_databasemanager.cpp moc_databasecontroller.cpp
moc_databasetest.cpp: databasetest.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) databasetest.h -o moc_databasetest.cpp

moc_databasemanager.cpp: databasemanager.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) databasemanager.h -o moc_databasemanager.cpp

moc_databasecontroller.cpp: databasemanager.h \
		databasecontroller.h
	/usr/bin/moc-qt4 $(DEFINES) $(INCPATH) databasecontroller.h -o moc_databasecontroller.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

main.o: main.cpp databasetest.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

databasetest.o: databasetest.cpp databasetest.h \
		databasecontroller.h \
		databasemanager.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o databasetest.o databasetest.cpp

databasemanager.o: databasemanager.cpp databasemanager.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o databasemanager.o databasemanager.cpp

databasecontroller.o: databasecontroller.cpp databasecontroller.h \
		databasemanager.h \
		instructor.h \
		user.h \
		course.h \
		ta.h \
		task.h \
		evaluation.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o databasecontroller.o databasecontroller.cpp

user.o: user.cpp user.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o user.o user.cpp

task.o: task.cpp task.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o task.o task.cpp

ta.o: ta.cpp ta.h \
		user.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o ta.o ta.cpp

instructor.o: instructor.cpp instructor.h \
		user.h \
		course.h \
		ta.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o instructor.o instructor.cpp

evaluation.o: evaluation.cpp evaluation.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o evaluation.o evaluation.cpp

course.o: course.cpp course.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o course.o course.cpp

moc_databasetest.o: moc_databasetest.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_databasetest.o moc_databasetest.cpp

moc_databasemanager.o: moc_databasemanager.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_databasemanager.o moc_databasemanager.cpp

moc_databasecontroller.o: moc_databasecontroller.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_databasecontroller.o moc_databasecontroller.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

